<?php

namespace ZendCodingStandard\Tests\PHP;

use ArrayObject;
use DateTime;
use InvalidArgumentException;
use RuntimeException;
use Some\BarClass;
use Some\FooClass as Foo;
use Some\MyTrait;
use ZendCodingStandard\Tests\TestCase;

class MyClass
    extends TestCase
    implements
        \PHP_CodeSniffer_Sniff,
        ArrayObject
{
    use \TestTrait;
    use MyTrait;

    public function method()
    {
        $dt = new DateTime();
        $ao = new ArrayObject();
        $ai = new \ArrayIterator();
        $dr = \DateTime
            ::
            createFromFormat('Y-m-d', '2015-12-16');
        $dx = \DateTime::createFromFormat('Y', '2016');

        $class = Foo::class;

        $instance = new $class;
        $myConst = $class::CONSTANT;

        throw new RuntimeException;

        new BarClass();

        $dt = new
        \DateTime;
    }

    public function throwEx()
    {
        throw new InvalidArgumentException;
    }

    public function fromNamespace()
    {
        return new CorrectClassNameCaseUnitTest();
    }
}
